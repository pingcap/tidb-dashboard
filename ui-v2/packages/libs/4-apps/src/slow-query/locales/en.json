{
  "__namespace__": "slow-query",
  "__comment__": "this file can be updated by running `pnpm gen:locales` command",
  "fields.backoff_detail": "Backoff Detail",
  "fields.backoff_time": "Execution Backoff Time",
  "fields.backoff_time.desc": "The total backoff waiting time before retry when a query encounters errors (note: there may be multiple backoffs in parallel so that this may not be a wall time)",
  "fields.backoff_total": "Backoff Total",
  "fields.backoff_types": "Backoff Types",
  "fields.binary_plan": "Binary Plan",
  "fields.commit_backoff_time": "Commit Backoff Time",
  "fields.commit_backoff_time.desc": "The total backoff waiting time when 2PC commit encounters errors (note: there may be multiple backoffs in parallel so that this may not be a wall time)",
  "fields.commit_time": "Commit Time",
  "fields.commit_time.desc": "Time consumed in 2PC commit phase when transaction commits",
  "fields.compile_time": "Generate Plan Time",
  "fields.compile_time.desc": "Time consumed when generating the plan",
  "fields.connection_id": "Connection ID",
  "fields.connection_id.desc": "Unique connection ID of the query",
  "fields.cop_proc_addr": "Copr Address (Process)",
  "fields.cop_proc_addr.desc": "The address of the {{distro.tikv}} that takes most time process the Coprocessor request",
  "fields.cop_proc_avg": "Mean Cop Proc",
  "fields.cop_proc_max": "Max Cop Proc",
  "fields.cop_proc_p90": "P90 Cop Proc",
  "fields.cop_time": "Coprocessor Executor Time",
  "fields.cop_time.desc": "The elapsed wall time when {{distro.tidb}} Coprocessor executor waiting all Coprocessor requests to finish (note: when there are JOIN in SQL statement, multiple {{distro.tidb}} Coprocessor executors may be running in parallel, which may cause this time not being a wall time)",
  "fields.cop_wait_addr": "Copr Address (Wait)",
  "fields.cop_wait_addr.desc": "The address of the {{distro.tikv}} that takes most time wait the Coprocessor request",
  "fields.cop_wait_avg": "Mean Cop Wait",
  "fields.cop_wait_max": "Max Cop Wait",
  "fields.cop_wait_p90": "P90 Cop Wait",
  "fields.db": "Execution Database",
  "fields.db.desc": "The database used to execute the query",
  "fields.digest": "Query Template ID",
  "fields.digest.desc": "a.k.a. Query digest",
  "fields.disk_max": "Max Disk",
  "fields.disk_max.desc": "Maximum disk usage of the query",
  "fields.exec_retry_count": "Retried Execution Count",
  "fields.exec_retry_time": "Retried Execution Time",
  "fields.exec_retry_time.desc": "Wall time consumed when SQL statement is retried and executed again, except for the last execution",
  "fields.get_commit_ts_time": "Get Commit Ts Time",
  "fields.get_commit_ts_time.desc": "Time consumed when getting a commit timestamp for 2PC commit phase when transaction commits",
  "fields.has_more_results": "Has More Results?",
  "fields.host": "Client Address",
  "fields.host.desc": "The address of the client that sends the query",
  "fields.index_names": "Index Names",
  "fields.index_names.desc": "The name of the used index",
  "fields.instance": "{{distro.tidb}} Instance",
  "fields.instance.desc": "The {{distro.tidb}} address that handles the query",
  "fields.is_explicit_txn": "Is Explicit Transaction?",
  "fields.is_internal": "Is Internal?",
  "fields.is_internal.desc": "Whether this is an internal query",
  "fields.kv_total": "KV Total",
  "fields.local_latch_wait_time": "Local Latch Wait Time",
  "fields.local_latch_wait_time.desc": "Time consumed when {{distro.tidb}} waits for the lock in the current {{distro.tidb}} instance before 2PC commit phase when transaction commits",
  "fields.lock_keys_time": "Lock Keys Time",
  "fields.lock_keys_time.desc": "Time consumed when locking keys in pessimistic transaction",
  "fields.memory_max": "Max Memory",
  "fields.memory_max.desc": "Maximum memory usage of the query",
  "fields.optimize_time": "Optimize Plan Time",
  "fields.optimize_time.desc": "Time consumed when optimizing the plan",
  "fields.parse_time": "Parse Time",
  "fields.parse_time.desc": "Time consumed when parsing the query",
  "fields.pd_total": "PD Total",
  "fields.plan": "Execution Plan",
  "fields.plan_digest": "Plan Digest",
  "fields.plan_from_binding": "Is Plan from Binding?",
  "fields.plan_from_cache": "Is Plan from Cache?",
  "fields.prepared": "Is Prepared?",
  "fields.prepared.desc": "Is Generated by the prepare statement",
  "fields.preproc_subqueries": "Preprocess Sub-Query",
  "fields.preproc_subqueries_time": "Preprocess Sub-Query Time",
  "fields.preproc_subqueries_time.desc": "Time consumed when pre-processing the subquery during the rewrite plan phase",
  "fields.prev_stmt": "Previous Query",
  "fields.prewrite_region": "Prewrite Regions",
  "fields.prewrite_time": "Prewrite Time",
  "fields.prewrite_time.desc": "Time consumed in 2PC prewrite phase when transaction commits",
  "fields.process_keys": "Process Keys",
  "fields.process_time": "Coprocessor Process Time",
  "fields.process_time.desc": "The total time of Coprocessor request being executed in {{distro.tikv}} (note: {{distro.tikv}} executes requests in parallel so that this is not a wall time)",
  "fields.query": "Query",
  "fields.query_time": "Latency",
  "fields.query_time.desc": "Execution time of the query",
  "fields.query_time_2": "Query Time",
  "fields.query_time_2.desc": "The elapsed wall time when execution the query",
  "fields.request_count": "Request Count",
  "fields.request_unit_read": "Request Unit Read",
  "fields.request_unit_write": "Request Unit Write",
  "fields.resolve_lock_time": "Resolve Lock Time",
  "fields.resolve_lock_time.desc": "Time consumed when {{distro.tidb}} resolves locks from other transactions in 2PC prewrite phase when transaction commits",
  "fields.resource_group": "Resource Group",
  "fields.resource_group.desc": "The resource group that the query belongs to",
  "fields.result": "Result",
  "fields.result.desc": "Whether query is executed successfully",
  "fields.result_rows": "Result Rows",
  "fields.rewrite_time": "Rewrite Plan Time",
  "fields.rewrite_time.desc": "Time consumed when rewriting the plan",
  "fields.rocksdb_block_cache_hit_count": "RocksDB Block Cache Hits",
  "fields.rocksdb_block_cache_hit_count.desc": "Total number of hits from the block cache (RocksDB block_cache_hit_count)",
  "fields.rocksdb_block_read_byte": "RocksDB Read Size",
  "fields.rocksdb_block_read_byte.desc": "Total number of bytes RocksDB read from file (RocksDB block_read_byte)",
  "fields.rocksdb_block_read_count": "RocksDB Block Reads",
  "fields.rocksdb_block_read_count.desc": "Total number of blocks RocksDB read from file (RocksDB block_read_count)",
  "fields.rocksdb_delete_skipped_count": "RocksDB Skipped Deletions",
  "fields.rocksdb_delete_skipped_count.desc": "Total number of deleted (a.k.a. tombstone) key versions that are skipped during iteration (RocksDB delete_skipped_count)",
  "fields.rocksdb_key_skipped_count": "RocksDB Skipped Keys",
  "fields.rocksdb_key_skipped_count.desc": "Total number of keys skipped during iteration (RocksDB key_skipped_count)",
  "fields.ru": "RU",
  "fields.ru.desc": "Request units",
  "fields.session_alias": "Session Alias",
  "fields.sql": "Query",
  "fields.stats": "Used Statistics",
  "fields.success": "Is Success?",
  "fields.success.desc": "Whether query is executed successfully",
  "fields.tidb_cpu_time": "{{distro.tidb}} CPU Time",
  "fields.tikv_cpu_time": "{{distro.tikv}} CPU Time",
  "fields.time_queued_by_rc": "Total Time Queued by RC",
  "fields.time_queued_by_rc.desc": "The total wait time spent in the resource queue (note: {{distro.tikv}} executes requests in parallel so that this is not a wall time)",
  "fields.timestamp": "Finish Time",
  "fields.timestamp.desc": "The time this query finished execution",
  "fields.total_keys": "Total Keys",
  "fields.total_keys.desc": "Total keys of the query",
  "fields.txn_retry": "Transaction Retries",
  "fields.txn_start_ts": "Start Timestamp",
  "fields.txn_start_ts.desc": "Transaction start timestamp, a.k.a. Transaction ID",
  "fields.user": "Execution User",
  "fields.user.desc": "The user that executes the query",
  "fields.wait_prewrite_binlog_time": "Wait Binlog Prewrite Time",
  "fields.wait_prewrite_binlog_time.desc": "Time consumed when waiting Binlog prewrite to finish",
  "fields.wait_time": "Coprocessor Wait Time",
  "fields.wait_time.desc": "The total time of Coprocessor request is prepared and wait to execute in {{distro.tikv}}, which may happen when retrieving a snapshot though Raft concensus protocol (note: {{distro.tikv}} waits requests in parallel so that this is not a wall time)",
  "fields.wait_ts": "Get Start Ts Time",
  "fields.wait_ts.desc": "Time consumed when getting a start timestamp when transaction begins",
  "fields.warnings": "Warnings",
  "fields.write_keys": "Write Keys",
  "fields.write_size": "Write Size",
  "fields.write_sql_response_total": "Send Response Time",
  "fields.write_sql_response_total.desc": "Time consumed when sending response to the SQL client"
}
